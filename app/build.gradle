apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'jacoco'
apply plugin: "kotlin-allopen"

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.jim.sharetocomputer"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1140
        versionName "1.1.4"
        testInstrumentationRunner "com.jim.sharetocomputer.TestRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        textOutput("stdout")
        warningsAsErrors true
        abortOnError true
        disable 'MissingTranslation', 'GoogleAppIndexingWarning'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

allOpen {
    annotation "com.jim.sharetocomputer.AllOpen"
}

configurations.all {
    resolutionStrategy.force "androidx.test:core:$testExtCore"
}

dependencies {
// Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"

// Support
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.2.0-beta01'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation 'androidx.preference:preference:1.1.0'

// Other
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.elvishew:xlog:1.6.1'

// Flavor
    debugImplementation 'androidx.fragment:fragment-testing:1.1.0'

// Testing
    testImplementation 'junit:junit:4.12'
    //noinspection GradleDependency
    testImplementation "androidx.test:core:$testExtCore"
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation "org.koin:koin-test:$koinVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation 'tools.fastlane:screengrab:1.1.0'
    androidTestImplementation "androidx.test:runner:$testExtCore"
    androidTestImplementation 'org.mockito:mockito-android:3.0.0'
    androidTestImplementation("org.koin:koin-test:$koinVersion") { exclude group: 'org.mockito' }
}

jacoco {
    toolVersion = jacocoVersion
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom fileTree(dir: project.buildDir, includes: [
            'jacoco/*.exec', 'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ])
}
